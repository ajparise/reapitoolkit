//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExampleLinqIntegration.CodeTableService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseCodeTable", Namespace="http://schemas.datacontract.org/2004/07/RaisersEdge.API.ToolKit.Web.DataContracts" +
        "")]
    [System.SerializableAttribute()]
    public partial class BaseCodeTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseTableEntry", Namespace="http://schemas.datacontract.org/2004/07/RaisersEdge.API.ToolKit.Web.DataContracts" +
        "")]
    [System.SerializableAttribute()]
    public partial class BaseTableEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeTablesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastChangedByIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TableEntriesIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeTablesID {
            get {
                return this.CodeTablesIDField;
            }
            set {
                if ((this.CodeTablesIDField.Equals(value) != true)) {
                    this.CodeTablesIDField = value;
                    this.RaisePropertyChanged("CodeTablesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateLastChanged {
            get {
                return this.DateLastChangedField;
            }
            set {
                if ((this.DateLastChangedField.Equals(value) != true)) {
                    this.DateLastChangedField = value;
                    this.RaisePropertyChanged("DateLastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastChangedByID {
            get {
                return this.LastChangedByIDField;
            }
            set {
                if ((this.LastChangedByIDField.Equals(value) != true)) {
                    this.LastChangedByIDField = value;
                    this.RaisePropertyChanged("LastChangedByID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongDescription {
            get {
                return this.LongDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LongDescriptionField, value) != true)) {
                    this.LongDescriptionField = value;
                    this.RaisePropertyChanged("LongDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortDescription {
            get {
                return this.ShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortDescriptionField, value) != true)) {
                    this.ShortDescriptionField = value;
                    this.RaisePropertyChanged("ShortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TableEntriesID {
            get {
                return this.TableEntriesIDField;
            }
            set {
                if ((this.TableEntriesIDField.Equals(value) != true)) {
                    this.TableEntriesIDField = value;
                    this.RaisePropertyChanged("TableEntriesID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CodeTableService.ICodeTablesService")]
    public interface ICodeTablesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeTablesService/GetCodeTables", ReplyAction="http://tempuri.org/ICodeTablesService/GetCodeTablesResponse")]
        ExampleLinqIntegration.CodeTableService.BaseCodeTable[] GetCodeTables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeTablesService/GetCodeTableEntriesByTableName", ReplyAction="http://tempuri.org/ICodeTablesService/GetCodeTableEntriesByTableNameResponse")]
        ExampleLinqIntegration.CodeTableService.BaseTableEntry[] GetCodeTableEntriesByTableName(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeTablesService/GetCodeTableEntriesByTableID", ReplyAction="http://tempuri.org/ICodeTablesService/GetCodeTableEntriesByTableIDResponse")]
        ExampleLinqIntegration.CodeTableService.BaseTableEntry[] GetCodeTableEntriesByTableID(int tableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeTablesService/UpdateCodeTableEntry", ReplyAction="http://tempuri.org/ICodeTablesService/UpdateCodeTableEntryResponse")]
        bool UpdateCodeTableEntry(ExampleLinqIntegration.CodeTableService.BaseTableEntry entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeTablesService/DeleteCodeTableEntry", ReplyAction="http://tempuri.org/ICodeTablesService/DeleteCodeTableEntryResponse")]
        bool DeleteCodeTableEntry(ExampleLinqIntegration.CodeTableService.BaseTableEntry entry);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ICodeTablesServiceChannel : ExampleLinqIntegration.CodeTableService.ICodeTablesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CodeTablesServiceClient : System.ServiceModel.ClientBase<ExampleLinqIntegration.CodeTableService.ICodeTablesService>, ExampleLinqIntegration.CodeTableService.ICodeTablesService {
        
        public CodeTablesServiceClient() {
        }
        
        public CodeTablesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CodeTablesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeTablesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeTablesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ExampleLinqIntegration.CodeTableService.BaseCodeTable[] GetCodeTables() {
            return base.Channel.GetCodeTables();
        }
        
        public ExampleLinqIntegration.CodeTableService.BaseTableEntry[] GetCodeTableEntriesByTableName(string tableName) {
            return base.Channel.GetCodeTableEntriesByTableName(tableName);
        }
        
        public ExampleLinqIntegration.CodeTableService.BaseTableEntry[] GetCodeTableEntriesByTableID(int tableID) {
            return base.Channel.GetCodeTableEntriesByTableID(tableID);
        }
        
        public bool UpdateCodeTableEntry(ExampleLinqIntegration.CodeTableService.BaseTableEntry entry) {
            return base.Channel.UpdateCodeTableEntry(entry);
        }
        
        public bool DeleteCodeTableEntry(ExampleLinqIntegration.CodeTableService.BaseTableEntry entry) {
            return base.Channel.DeleteCodeTableEntry(entry);
        }
    }
}
